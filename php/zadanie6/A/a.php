<?php

/**
 * Задача A: "Работа над ошибками" - восстановление ссылок из склеенного текста
 * 
 * Задача: Восстановить ссылки формата "протокол"://"домен".ru|com"/<контекст>"
 * из склеенного текста без специальных символов (:, /, .)
 * 
 * Формат ссылок:
 * - протокол: http или https
 * - домен: непустая строка из строчных латинских букв
 * - контекст: может отсутствовать, если присутствует, то непустая строка из строчных латинских букв
 * 
 * Если существует несколько вариантов исходной ссылки, вывести тот, 
 * в котором протокол имеет наибольшую длину, а хост - наименьшую.
 * Не печатать слеш в конце ссылки если за ним нет url-адреса.
 */

// Функция для восстановления ссылки
function restoreLink(string $brokenLink): string
{
	// Регулярное выражение для поиска протокола (http или https)
	if (preg_match('/^(https?)(.*)/i', $brokenLink, $matches)) {
		$protocol = $matches[1];
		$remainder = $matches[2];

		// Определяем домен и контекст
		// Ищем окончание домена (.ru или .com)
		if (preg_match('/(.*?)(ru|com)(.*)/', $remainder, $domainMatches)) {
			$domainPart = $domainMatches[1];
			$tld = $domainMatches[2];
			$context = $domainMatches[3] ?? '';

			// Восстанавливаем ссылку
			$restoredLink = $protocol . '://' . $domainPart . '.' . $tld;

			// Добавляем контекст, если он есть
			if (!empty($context)) {
				$restoredLink .= '/' . $context;
			}

			return $restoredLink;
		}
	}

	// Если не удалось восстановить ссылку
	return "Не удалось восстановить ссылку";
}

// Чтение входных данных
$brokenLink = trim(fgets(STDIN));

// Восстановление ссылки
$restoredLink = restoreLink($brokenLink);

// Вывод результата
echo $restoredLink . PHP_EOL;
